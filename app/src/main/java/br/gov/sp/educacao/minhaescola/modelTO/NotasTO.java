package br.gov.sp.educacao.minhaescola.modelTO;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import br.gov.sp.educacao.minhaescola.model.Nota;public class NotasTO {    private JSONArray jsonNota;    private int cd_aluno;    private int cont = 0;    public NotasTO(JSONArray jsonNotas, int cd_aluno) {        this.jsonNota = jsonNotas;        this.cd_aluno = cd_aluno;    }    public ArrayList<Nota> getNotasFromJson() {        ArrayList<Nota> notasAluno = new ArrayList<>();        try {            int tamanho = jsonNota.length();            for(int b = 0; b < tamanho; b++) {                JSONObject jsonNotas = jsonNota.getJSONObject(b);                JSONArray notasArray = jsonNotas.getJSONArray("Notas");                Nota nota;                for(int n = 0; n < notasArray.length(); n++) {                    nota = new Nota();                    cont++;                    nota.setCd_aluno(cd_aluno);                    nota.setCd_nota(cont);                    nota.setBimestre(jsonNotas.getInt("Bimestre"));                    nota.setCd_disciplina(notasArray.getJSONObject(n).getInt("CodigoDisciplina"));                    nota.setNome_disciplina(notasArray.getJSONObject(n).getString("NomeDisciplina"));                    nota.setNota(notasArray.getJSONObject(n).getDouble("Nota"));                    JSONArray composicaoNotaArray = notasArray.getJSONObject(n).getJSONArray("ComposicaoNota");                    if (!composicaoNotaArray.isNull(n)) {                        for (int c =0; c < composicaoNotaArray.length(); c++) {                            nota.setDescricaoAtividade(composicaoNotaArray.getJSONObject(c).getString("DescricaoAtividade"));                            nota.setNotas(composicaoNotaArray.getJSONObject(c).getString("Nota"));                        }                    }                    notasAluno.add(nota);                }            }            return notasAluno;        }        catch (JSONException e) {            e.printStackTrace();            return null;        }    }}