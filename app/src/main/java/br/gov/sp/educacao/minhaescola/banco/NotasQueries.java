package br.gov.sp.educacao.minhaescola.banco;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.util.Log;import java.util.ArrayList;import br.gov.sp.educacao.minhaescola.model.Nota;public class NotasQueries {    private SQLiteDatabase db;    public NotasQueries(Context ctx) {        DBCore auxDB = new DBCore(ctx);        db = auxDB.getWritableDatabase();    }    public void inserirNotas(ArrayList<Nota> notas){        ContentValues valores = new ContentValues();        ContentValues valoresContent = new ContentValues();        try {            for (Nota nota : notas) {                if (!temNotas(nota)) {                    valores.clear();                    valores.put("cd_aluno", nota.getCd_aluno());                    valores.put("bimestre", nota.getBimestre());                    valores.put("cd_disciplina", nota.getCd_disciplina());                    valores.put("nome_disciplina", nota.getNome_disciplina());                    valores.put("nota", nota.getNota());                    db.insertWithOnConflict("nota", null, valores, SQLiteDatabase.CONFLICT_REPLACE);                    valoresContent.clear();                    valoresContent.put("cd_nota", nota.getCd_nota());                    valoresContent.put("notas", nota.getNotas());                    valoresContent.put("descricao", nota.getDescricaoAtividade());                    db.insertWithOnConflict("composicao_nota", null, valoresContent, SQLiteDatabase.CONFLICT_REPLACE);                }                else {                    Log.e("Notas", "Com nota");                }            }        }        catch (Exception e) {            e.printStackTrace();        }        finally {            valores.clear();            valoresContent.clear();        }    }    private boolean temNotas(Nota nota) {        boolean temNota = false;        Cursor cursor = db.rawQuery("SELECT cd_nota " +                                         "FROM nota " +                                         "WHERE cd_aluno = " + nota.getCd_aluno() +                                         " AND bimestre = " + nota.getBimestre() +                                         " AND cd_disciplina = " + nota.getCd_disciplina(),                                    null);        if(cursor.moveToFirst()) {            temNota = true;        }        cursor.close();        return temNota;    }    public boolean temNotaBanco(int cd_aluno) {        Cursor cursor = db.rawQuery("SELECT cd_nota FROM nota WHERE cd_aluno = " + cd_aluno,                                    null);        boolean temNota = false;        if(cursor.moveToFirst()) {            temNota = true;        }        cursor.close();        return temNota;    }    public int maiorBimestre() {        Cursor cursor = db.rawQuery("SELECT MAX(bimestre) FROM nota",null);        int bimestre = 0;        if (cursor != null) {            cursor.moveToFirst();            bimestre = cursor.getInt(0);        }        cursor.close();        return bimestre;    }    public ArrayList<Nota> getNotas (int cd_aluno, int bimestre) {        ArrayList<Nota> notas = null;        Cursor cursor = db.rawQuery("SELECT nota.cd_nota, " +                                         "cd_aluno, " +                                         "bimestre, " +                                         "cd_disciplina, " +                                         "nome_disciplina,nota, " +                                         "composicao_nota.cd_nota, " +                                         "notas, " +                                         "descricao FROM nota, composicao_nota " +                                         "WHERE nota.cd_nota = composicao_nota.cd_composicao_nota " +                                         " AND cd_aluno = " + "'" + cd_aluno + "'" +                                         " AND bimestre = " + "'" + bimestre + "';",                                        null);        if (cursor.moveToFirst()) {            notas = new ArrayList<>(cursor.getCount());            Nota nota;            do {                nota = new Nota();                nota.setCd_nota(cursor.getInt(0));                nota.setCd_aluno(cursor.getInt(1));                nota.setBimestre(cursor.getInt(2));                nota.setCd_disciplina(cursor.getInt(3));                nota.setNome_disciplina(cursor.getString(4));                nota.setNota(cursor.getInt(5));                nota.setCd_nota(cursor.getInt(6));                nota.setNotas(cursor.getString(7));                nota.setDescricaoAtividade(cursor.getString(8));                notas.add(nota);            }            while (cursor.moveToNext());        }        cursor.close();        return notas;    }}