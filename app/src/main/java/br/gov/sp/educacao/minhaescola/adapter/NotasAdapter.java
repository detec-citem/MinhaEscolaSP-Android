package br.gov.sp.educacao.minhaescola.adapter;import android.app.Activity;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.LinearLayout;import android.widget.TextView;import java.util.List;import br.gov.sp.educacao.minhaescola.R;import br.gov.sp.educacao.minhaescola.model.Nota;public class NotasAdapter        extends BaseAdapter {    private final List<Nota> bimestreNotas;    private final Activity act;    public LinearLayout linearItemNota;    public LinearLayout linearListaComposicao;    public LinearLayout linearCompNota;    public Button lvNotas_btn;    public Button btnNotaComp;    public TextView lvNotas_txt;    public TextView txtDescrAtividade;    public NotasAdapter(List<Nota> bimestreNotas, Activity act) {        this.bimestreNotas = bimestreNotas;        this.act = act;    }    @Override    public int getCount() {        return bimestreNotas.size();    }    @Override    public Object getItem(int i) {        return bimestreNotas.get(i);    }    @Override    public long getItemId(int i) {        return 0;    }    @Override    public View getView(int i, View view, ViewGroup viewGroup) {        View v = act.getLayoutInflater().inflate(R.layout.item_notas_list, viewGroup, false);        View itemComp = act.getLayoutInflater().inflate(R.layout.item_composicao_nota, viewGroup, false);        Nota nota = bimestreNotas.get(i);        Button lvNotas_btn = v.findViewById(R.id.lvNotas_btn);        TextView lvNotas_txt = v.findViewById(R.id.lvNotas_txt);        final LinearLayout linearItemNota = v.findViewById(R.id.nota_linearItem);        final LinearLayout linearListaComposicao = v.findViewById(R.id.notas_linearComposicao);        lvNotas_txt.setText(nota.getNome_disciplina());        if (String.valueOf(nota.getNota()).equals("-1.0")) {            lvNotas_btn.setText("-");        }        else {            lvNotas_btn.setText(String.valueOf(nota.getNota()));        }        if(nota.getNotas() == null) {            //View itemComp = act.getLayoutInflater().inflate(R.layout.item_composicao_nota, viewGroup, false);            itemComp.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    if(linearListaComposicao.getVisibility() == View.VISIBLE) {                        linearListaComposicao.setVisibility(View.GONE);                    }                    else {                        linearListaComposicao.setVisibility(View.VISIBLE);                    }                }            });            Button btnNotaComp = itemComp.findViewById(R.id.composicaoNota_nota);            TextView txtDescrAtividade = itemComp.findViewById(R.id.composicaoNota_nome);            btnNotaComp.setText("-");            txtDescrAtividade.setText("nenhuma avaliação lançada");            linearListaComposicao.addView(itemComp);        }        else {            //View itemComp = act.getLayoutInflater().inflate(R.layout.item_composicao_nota, viewGroup, false);                itemComp.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View view) {                        if(linearListaComposicao.getVisibility() == View.VISIBLE) {                            linearListaComposicao.setVisibility(View.GONE);                        }                        else {                            linearListaComposicao.setVisibility(View.VISIBLE);                        }                    }                });            Button btnNotaComp = itemComp.findViewById(R.id.composicaoNota_nota);            TextView txtDescrAtividade = itemComp.findViewById(R.id.composicaoNota_nome);            btnNotaComp.setText(nota.getNotas());            txtDescrAtividade.setText(nota.getDescricaoAtividade().toLowerCase());            if(linearListaComposicao != null) {                linearListaComposicao.addView(itemComp);            }        }        linearItemNota.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if(linearListaComposicao.getVisibility() == View.VISIBLE) {                    linearListaComposicao.setVisibility(View.GONE);                }                else {                    linearListaComposicao.setVisibility(View.VISIBLE);                }            }        });        return v;    }}